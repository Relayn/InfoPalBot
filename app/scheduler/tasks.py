"""
–ú–æ–¥—É–ª—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º APScheduler.
–≠—Ç–∏ –∑–∞–¥–∞—á–∏ –æ—Ç–≤–µ—á–∞—é—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö API –∏ —Ä–∞—Å—Å—ã–ª–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞—á–∏:
1. –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
2. –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤ –ø–æ–≥–æ–¥—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
3. –†–∞—Å—Å—ã–ª–∫–∞ —Å–≤–µ–∂–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
4. –†–∞—Å—Å—ã–ª–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏–∑ KudaGo –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º

–ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞:
- –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
- –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö API
- –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É—á–µ—Ç–æ–º HTML-—Ä–∞–∑–º–µ—Ç–∫–∏
- –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
- –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—à–∏–±–∫–∏

–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:
- –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö
- –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
- –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
- –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    # –í main.py –∏–ª–∏ –¥—Ä—É–≥–æ–º –º–æ–¥—É–ª–µ:
    scheduler.add_job(send_weather_updates, 'interval', hours=3, args=[bot])
    scheduler.add_job(send_news_updates, 'interval', hours=6, args=[bot])
    scheduler.add_job(send_events_updates, 'interval', minutes=2, args=[bot])
"""

import logging
from datetime import datetime
from aiogram import Bot  # –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞ –≤ –∑–∞–¥–∞—á–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
from aiogram.enums import ParseMode  # –î–ª—è —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è parse_mode –≤ send_message
import html  # –î–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML-—Å—É—â–Ω–æ—Å—Ç–µ–π –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
from typing import List, Dict, Any, Optional  # –î–ª—è –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π —Ç–∏–ø–æ–≤

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from app.database.session import get_session
from app.database.crud import get_active_subscriptions_by_info_type

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –ë–î
from app.database.models import (
    User,
    Subscription,
)  # Subscription –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ type hinting

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º API-–∫–ª–∏–µ–Ω—Ç—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
from app.api_clients.weather import get_weather_data
from app.api_clients.news import get_top_headlines
from app.api_clients.events import get_kudago_events

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ç–∏–ø–æ–≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –∫–æ–¥–æ–≤ –≥–æ—Ä–æ–¥–æ–≤
from app.bot.constants import (
    INFO_TYPE_WEATHER,
    INFO_TYPE_NEWS,
    INFO_TYPE_EVENTS,
    KUDAGO_LOCATION_SLUGS,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è –º–æ–¥—É–ª—è
logger = logging.getLogger(__name__)


async def test_scheduled_task() -> None:
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞.

    –≠—Ç–∞ –∑–∞–¥–∞—á–∞:
    1. –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    2. –õ–æ–≥–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏

    Note:
        - –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        - –ù–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–º API
    """
    current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    logger.info(f"APScheduler: –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ {current_time}!")


async def send_weather_updates(bot: Bot) -> None:
    """
    –ó–∞–¥–∞—á–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–≥–æ–¥—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.
    –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–æ–≥–æ–¥—É, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.

    –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã:
    1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –ø–æ–≥–æ–¥—É
    2. –î–ª—è –∫–∞–∂–¥–æ–π –ø–æ–¥–ø–∏—Å–∫–∏:
       - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–≥–æ—Ä–æ–¥, user_id)
       - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
       - –ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã —á–µ—Ä–µ–∑ API
       - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    3. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

    Args:
        bot (Bot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Aiogram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    Note:
        - –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞
        - –°–æ–æ–±—â–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML
        - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ (API, –ë–î, –æ—Ç–ø—Ä–∞–≤–∫–∞)
        - –ü—Ä–æ–ø—É—Å–∫–∞—é—Ç—Å—è –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
        - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –≥—Ä–∞–¥—É—Å–∞—Ö –¶–µ–ª—å—Å–∏—è
    """
    logger.info("APScheduler: –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ send_weather_updates...")
    with get_session() as db_session:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Å–µ—Å—Å–∏–∏ –ë–î
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–æ–≥–æ–¥—É
        weather_subscriptions: List[Subscription] = (
            get_active_subscriptions_by_info_type(
                session=db_session, info_type=INFO_TYPE_WEATHER
            )
        )
        logger.info(
            f"–ù–∞–π–¥–µ–Ω–æ {len(weather_subscriptions)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –ø–æ–≥–æ–¥—É."
        )

        for sub in weather_subscriptions:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–µ—Ç–∞–ª–µ–π –∏–ª–∏ user_id
            if not sub.details or not sub.user_id:
                logger.warning(
                    f"–ü—Ä–æ–ø—É—Å–∫ –ø–æ–¥–ø–∏—Å–∫–∏ ID {sub.id}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≥–æ—Ä–æ–¥ (details) –∏–ª–∏ user_id."
                )
                continue

            # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ Telegram ID
            user: Optional[User] = db_session.get(User, sub.user_id)
            if not user or not user.telegram_id:
                logger.warning(
                    f"–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ telegram_id –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ ID {sub.id} (user_id: {sub.user_id})."
                )
                continue

            telegram_id_to_send: int = user.telegram_id
            city_name: str = sub.details

            logger.info(
                f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–æ–≥–æ–¥—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id_to_send}, –≥–æ—Ä–æ–¥: {city_name}"
            )
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ API –∫–ª–∏–µ–Ω—Ç
            weather_data: Optional[Dict[str, Any]] = await get_weather_data(city_name)

            if weather_data and not weather_data.get("error"):
                try:
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ
                    description: str = weather_data["weather"][0][
                        "description"
                    ].capitalize()
                    temp: float = weather_data["main"]["temp"]
                    feels_like: float = weather_data["main"]["feels_like"]
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    message_text: str = (
                        f"üîî <b>–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥. {html.escape(city_name)}:</b>\n"
                        f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                        f"‚òÄÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {description}"
                    )
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    await bot.send_message(
                        chat_id=telegram_id_to_send,
                        text=message_text,
                        parse_mode=ParseMode.HTML,
                    )  # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º parse_mode
                    logger.info(
                        f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–≥–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id_to_send} –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city_name}."
                    )
                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id_to_send} –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city_name}: {e}",
                        exc_info=True,
                    )
            elif weather_data and weather_data.get("error"):
                # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –ø–æ–ª—É—á–µ–Ω–Ω—É—é –æ—Ç API-–∫–ª–∏–µ–Ω—Ç–∞
                logger.warning(
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (–≥–æ—Ä–æ–¥: {city_name}): {weather_data.get('message')}"
                )
            else:
                # –õ–æ–≥–∏—Ä—É–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ API-–∫–ª–∏–µ–Ω—Ç –≤–µ—Ä–Ω—É–ª None –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                logger.warning(
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ (–≥–æ—Ä–æ–¥: {city_name}), API –≤–µ—Ä–Ω—É–ª None –∏–ª–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç."
                )
    logger.info("APScheduler: –ó–∞–¥–∞—á–∞ send_weather_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


async def send_news_updates(bot: Bot) -> None:
    """
    –ó–∞–¥–∞—á–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.
    –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.

    –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã:
    1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏
    2. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    3. –ï–¥–∏–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    4. –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    5. –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º

    Args:
        bot (Bot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Aiogram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    Note:
        - –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
        - –ù–æ–≤–æ—Å—Ç–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
        - –°–æ–æ–±—â–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML
        - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        - –û—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü
        - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    """
    logger.info("APScheduler: –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ send_news_updates...")
    all_news_subscriptions: List[Subscription] = []
    with get_session() as db_session:
        all_news_subscriptions = get_active_subscriptions_by_info_type(
            session=db_session, info_type=INFO_TYPE_NEWS
        )

    if not all_news_subscriptions:
        logger.info("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏. –†–∞—Å—Å—ã–ª–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
        logger.info("APScheduler: –ó–∞–¥–∞—á–∞ send_news_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        return

    # –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ user_id, –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏.
    # –≠—Ç–æ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑,
    # –¥–∞–∂–µ –µ—Å–ª–∏ —É –Ω–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫.
    user_ids_subscribed_to_news: List[int] = list(
        set([sub.user_id for sub in all_news_subscriptions if sub.user_id])
    )
    logger.info(
        f"–ù–∞–π–¥–µ–Ω–æ {len(user_ids_subscribed_to_news)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏."
    )

    if not user_ids_subscribed_to_news:
        logger.info(
            "APScheduler: –ó–∞–¥–∞—á–∞ send_news_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏)."
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    articles_or_error: Optional[List[Dict[str, Any]]] | Dict[str, Any] = (
        await get_top_headlines(country="ru", page_size=5)
    )

    if isinstance(articles_or_error, dict) and articles_or_error.get("error"):
        logger.error(
            f"–û—à–∏–±–∫–∞ API –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏: {articles_or_error.get('message')}"
        )
        logger.info("APScheduler: –ó–∞–¥–∞—á–∞ send_news_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ API.")
        return

    if not isinstance(articles_or_error, list) or not articles_or_error:
        logger.info(
            "–ù–µ –ø–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç API –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç–º–µ–Ω–µ–Ω–∞."
        )
        logger.info("APScheduler: –ó–∞–¥–∞—á–∞ send_news_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏
    news_message_lines: List[str] = ["<b>üì∞ –°–≤–µ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ (–†–æ—Å—Å–∏—è):</b>"]
    for i, article in enumerate(articles_or_error):
        title: str = html.escape(article.get("title", "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"))
        url: str = article.get("url", "#")
        source: str = html.escape(
            article.get("source", {}).get("name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫")
        )
        news_message_lines.append(f"{i+1}. <a href='{url}'>{title}</a> ({source})")
    news_message_text: str = "\n".join(news_message_lines)

    # –†–∞—Å—Å—ã–ª–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≤—Å–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    with get_session() as db_session:  # –û—Ç–¥–µ–ª—å–Ω–∞—è —Å–µ—Å—Å–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è User –æ–±—ä–µ–∫—Ç–æ–≤
        for user_id in user_ids_subscribed_to_news:
            user: Optional[User] = db_session.get(User, user_id)
            if user and user.telegram_id:
                try:
                    await bot.send_message(
                        chat_id=user.telegram_id,
                        text=news_message_text,
                        disable_web_page_preview=True,
                        parse_mode=ParseMode.HTML,
                    )  # –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º parse_mode
                    logger.info(
                        f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}."
                    )
                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}: {e}",
                        exc_info=True,
                    )
            else:
                logger.warning(
                    f"–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ telegram_id –¥–ª—è user_id: {user_id} –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π."
                )

    logger.info("APScheduler: –ó–∞–¥–∞—á–∞ send_news_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


async def send_events_updates(bot: Bot) -> None:
    """
    –ó–∞–¥–∞—á–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö KudaGo –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º.
    –ü–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.

    –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã:
    1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
    2. –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤
    3. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ—Ä–æ–¥–∞:
       - –ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏–π —á–µ—Ä–µ–∑ API KudaGo
       - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Å–æ–±—ã—Ç–∏—è–º–∏
       - –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –≥–æ—Ä–æ–¥–∞

    Args:
        bot (Bot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ Aiogram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.

    Note:
        - –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã (–≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ)
        - –°–æ–±—ã—Ç–∏—è –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –≥–æ—Ä–æ–¥–∞–º –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ API-–∑–∞–ø—Ä–æ—Å–æ–≤
        - –°–æ–æ–±—â–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É—é—Ç—Å—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º HTML
        - –û–ø–∏—Å–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π –æ–±—Ä–µ–∑–∞—é—Ç—Å—è –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
        - –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
        - –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏
    """
    logger.info("APScheduler: –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ send_events_updates...")
    with get_session() as db_session:
        event_subscriptions: List[Subscription] = get_active_subscriptions_by_info_type(
            session=db_session, info_type=INFO_TYPE_EVENTS
        )
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(event_subscriptions)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ —Å–æ–±—ã—Ç–∏—è.")

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ location_slug, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –æ–¥–∏–Ω API –∑–∞–ø—Ä–æ—Å –Ω–∞ –≥–æ—Ä–æ–¥
        events_by_location_slug: Dict[str, List[Dict[str, Any]]] = (
            {}
        )  # –ö—ç—à –¥–ª—è —Å–æ–±—ã—Ç–∏–π –ø–æ –≥–æ—Ä–æ–¥–∞–º
        users_for_location_slug: Dict[str, List[int]] = (
            {}
        )  # telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –≥–æ—Ä–æ–¥–∞–º

        for sub in event_subscriptions:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–µ—Ç–∞–ª–µ–π (location_slug) –∏–ª–∏ user_id
            if not sub.details or not sub.user_id:
                logger.warning(
                    f"–ü—Ä–æ–ø—É—Å–∫ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è ID {sub.id}: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç location_slug –∏–ª–∏ user_id."
                )
                continue

            location_slug: str = sub.details
            user: Optional[User] = db_session.get(User, sub.user_id)
            if not user or not user.telegram_id:
                logger.warning(
                    f"–ù–µ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ telegram_id –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Å–æ–±—ã—Ç–∏—è ID {sub.id} (user_id: {sub.user_id})."
                )
                continue

            if location_slug not in users_for_location_slug:
                users_for_location_slug[location_slug] = []
            if (
                user.telegram_id not in users_for_location_slug[location_slug]
            ):  # –ò–∑–±–µ–≥–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–¥–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
                users_for_location_slug[location_slug].append(user.telegram_id)

        # –î–ª—è –∫–∞–∂–¥–æ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ location_slug –ø–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        for location_slug, user_telegram_ids in users_for_location_slug.items():
            if not user_telegram_ids:
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞

            logger.info(f"–ó–∞–ø—Ä–æ—Å —Å–æ–±—ã—Ç–∏–π KudaGo –¥–ª—è location_slug: {location_slug}")
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è —á–µ—Ä–µ–∑ API –∫–ª–∏–µ–Ω—Ç (–∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, 3 –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ–±—ã—Ç–∏—è)
            kudago_result: Optional[List[Dict[str, Any]]] | Dict[str, Any] = (
                await get_kudago_events(location=location_slug, page_size=3)
            )

            if isinstance(kudago_result, dict) and kudago_result.get("error"):
                logger.error(
                    f"–û—à–∏–±–∫–∞ API KudaGo –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è '{location_slug}': {kudago_result.get('message')}"
                )
                continue  # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≥–æ—Ä–æ–¥—É, –µ—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞ API

            if not isinstance(kudago_result, list) or not kudago_result:
                logger.info(
                    f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π KudaGo –¥–ª—è '{location_slug}'."
                )
                continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞, –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π

            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å–æ–±—ã—Ç–∏—è—Ö
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ "—á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–µ" –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø–æ –µ–≥–æ slug'—É
            city_display_name: str = location_slug
            for name, slug_val in KUDAGO_LOCATION_SLUGS.items():
                if slug_val == location_slug:
                    city_display_name = name.capitalize()
                    break

            event_message_lines: List[str] = [
                f"<b>üéâ –ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è –≤ –≥. {html.escape(city_display_name)}:</b>"
            ]
            for i, event_data in enumerate(kudago_result):
                title: str = html.escape(event_data.get("title", "–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞"))
                site_url: str = event_data.get("site_url", "#")
                # –û—á–∏—â–∞–µ–º –∏ –æ–±—Ä–µ–∑–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –≤ —Ä–∞—Å—Å—ã–ª–∫–µ
                description_raw: str = event_data.get("description", "")
                description: str = html.unescape(
                    description_raw.replace("<p>", "")
                    .replace("</p>", "")
                    .replace("<br>", "\n")
                ).strip()

                event_str: str = f"{i+1}. <a href='{site_url}'>{title}</a>"
                if description:
                    max_desc_len = 70  # –ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
                    if len(description) > max_desc_len:
                        description = description[:max_desc_len] + "..."
                    event_str += f"\n   <i>{html.escape(description)}</i>"
                event_message_lines.append(event_str)

            event_message_text: str = "\n\n".join(event_message_lines)

            # –†–∞—Å—Å—ã–ª–∞–µ–º —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞
            for telegram_id in user_telegram_ids:
                try:
                    await bot.send_message(
                        chat_id=telegram_id,
                        text=event_message_text,
                        disable_web_page_preview=True,
                        parse_mode=ParseMode.HTML,
                    )
                    logger.info(
                        f"–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–æ–±—ã—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id} –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city_display_name}."
                    )
                except Exception as e:
                    logger.error(
                        f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id} –¥–ª—è –≥–æ—Ä–æ–¥–∞ {city_display_name}: {e}",
                        exc_info=True,
                    )

    logger.info("APScheduler: –ó–∞–¥–∞—á–∞ send_events_updates –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
